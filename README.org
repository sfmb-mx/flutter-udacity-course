* [[https://www.udacity.com/course/ud905][Build Native Mobile Apps with Flutter]]
  :PROPERTIES:
  :CUSTOM_ID: build-native-mobile-apps-with-flutter
  :END:

This repo contains everything you need for
[[https://www.udacity.com/course/ud905][Build Native Mobile Apps with
Flutter, by Google and Udacity]]. The Unit Converter app has been broken
down into sub-projects. To get started, [[https://flutter.io/setup][set
up your development environment]] and clone this repo, using
=git clone git@github.com:flutter/udacity-course.git= or
=git clone https://github.com/flutter/udacity-course.git=.

** Building the Complete Unit Converter App
   :PROPERTIES:
   :CUSTOM_ID: building-the-complete-unit-converter-app
   :END:

*** Android Studio/IntelliJ
    :PROPERTIES:
    :CUSTOM_ID: android-studiointellij
    :END:

1. Open the IDE and select =Import project (Gradle, Eclipse ADT, etc.)=.
   After you import the first time, you can use
   =Open an existing Android Studio project= in the future.

2. Choose the =unit_converter= project folder, located in this repo at
   [[https://github.com/flutter/udacity-course/tree/master/unit_converter/unit_converter][=/unit_converter/unit_converter=]].
   Select =Next= for all setup instructions, making sure that the Source
   Files screen shows Flutter as an option.

3. You can view your Flutter app files in the Projects tab in the
   Project Tool Window (View -> Tool Windows). Make sure your Flutter
   SDK is set and dependencies have been updated.

4. Make sure your device/emulator is running. You can view the AVD
   Manager at Tools -> AVD Manager, or by typing =Ctrl/Cmd= + =Shift= +
   =a= and typing in 'AVD Manager'.

5. Press the green Play button to run the app. Note that =main.dart=
   should be chosen in the dropdown on the left of the green Play
   button.

*** Command Line
    :PROPERTIES:
    :CUSTOM_ID: command-line
    :END:

1. Run =cd ~/<repo location>/unit_converter/unit_converter=.
2. Make sure your device/emulator is running.
3. Run =flutter run=.

** Building Each Coding Exercise
   :PROPERTIES:
   :CUSTOM_ID: building-each-coding-exercise
   :END:

Each coding exercise for the Udacity course is located in the
[[https://github.com/flutter/udacity-course/tree/master/course][=course=
directory]]. Each exercise is split into a standalone Task project and
Solution project. The Solution is one of many possible solutions. You
can compare your implementation with the solution using the =diff=
command.

*** Android Studio/IntelliJ
    :PROPERTIES:
    :CUSTOM_ID: android-studiointellij-1
    :END:

1. Open the IDE and select =Import project (Gradle, Eclipse ADT, etc.)=.
   After you import the first time, you can use
   =Open an existing Android Studio project= in the future.
2. Find the coding exercise you want to do and choose the =task_=
   project folder. For example, for the second coding exercise,
   =02_category_widget=, choose the =task_02_category_widget= project
   located in this repo at
   [[https://github.com/flutter/udacity-course/tree/master/course/02_category_widget/task_02_category_widget][=/course/2_category_widget/task_02_category_widget=]].
3. You can view your Flutter app files in the Projects tab in the
   Project Tool Window (View -> Tool Windows). Make sure your Flutter
   SDK is set and dependencies have been updated.
4. Make sure your device/emulator is running. You can view the AVD
   Manager at Tools -> AVD Manager, or by typing =Ctrl/Cmd= + =Shift= +
   =a= and typing in 'AVD Manager'.
5. Press the green Play button to run the app. Note that =main.dart=
   should be chosen in the dropdown on the left of the green Play
   button.
6. Follow the README and complete the TODOs in the coding exercise.

* Style Guide
  :PROPERTIES:
  :CUSTOM_ID: style-guide
  :END:

Use strong mode.

* Contribution Guidelines
  :PROPERTIES:
  :CUSTOM_ID: contribution-guidelines
  :END:

Please feel free to file issues at
https://github.com/flutter/udacity-course/issues. Flutter issues can be
filed at https://github.com/flutter/flutter/issues.

You can also contribute changes. Setting up: 1. Fork
=https://github.com/flutter/udacity-course= into your own GitHub account
2. =git clone git@github.com:<your_name_here>/udacity-course.git= 3.
=cd udacity-course= 4.
=git remote add upstream git@github.com:flutter/udacity-course.git=

Submitting changes: 1. =git fetch upstream= 2.
=git checkout upstream/master -b name_of_your_branch= 3. Make changes 4.
=git commit -a -m "<your informative commit message>"= 5.
=git push origin name_of_your_branch=

To send a pull request: 1. =git pull-request= (if you are using
[[https://hub.github.com/][Hub]]) or go to
https://github.com/flutter/udacity-course and click the "Compare & pull
request" button 2. Tag the relevant people and GitHub issue (if any)

* Resources
  :PROPERTIES:
  :CUSTOM_ID: resources
  :END:

For a list of Flutter resources to help you get started as well as
continue learning after the course, check
[[https://github.com/flutter/udacity-course/tree/master/resources.md][here]].
